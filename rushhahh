int c_1_2[4][4] = {{4,1,2,3},{4,1,3,2},{4,2,1,3},{4,3,1,2}};
int c_1_3[3][4] = {{4,1,3,2},{4,2,3,1},{4,3,1,2}};
int c_1_4[1][4] = {{4,3,2,1}};
int c_2_1[3][4] = {{2,3,1,4},{3,1,2,4},{3,2,1,4}};
int c_2_2[6][4] = {{1,4,2,3},{2,1,4,3},{2,4,1,3},{3,1,4,2},{3,2,4,1},{3,4,1,2}};
int c_2_3[3][4] = {{1,4,3,2},{2,4,3,1},{3,4,2,1}};
int c_3_1[3][4] = {{2,3,1,4},{1,3,2,4},{2,1,3,4}};
int c_3_2[3][4] = {{2,3,4,1},{1,3,4,2},{1,2,4,3}};
int c_4_1[1][4] = {{1,2,3,4}};
int ans[4][4] = {0};
int char_to_int(char c)
{
    return c - '0';
}
void change_string_to_array(const char *d, int arry[4][4], int numbers[16]){
    int x = 0;
    int y = 0;
    int z = 0;
    const char *p = d;
    while(*p != '\0'){
        if(*p >= '0' && *p <= '9'){
            int val = char_to_int(*p);
            numbers[z++] = val;
            arry[x][y++] = val;
            if(y==4){ y=0; x++; }
        }
        p++;
    }
}

int (*determan_the_arry(int a, int b, int *rows))[4] {
    if(a==1 && b==2){ *rows=4; return c_1_2;}
    if(a==1 && b==3){ *rows=3; return c_1_3;}
    if(a==1 && b==4){ *rows=1; return c_1_4;}
    if(a==2 && b==1){ *rows=3; return c_2_1;}
    if(a==2 && b==2){ *rows=6; return c_2_2;}
    if(a==2 && b==3){ *rows=3; return c_2_3;}
    if(a==3 && b==1){ *rows=3; return c_3_1;}
    if(a==3 && b==2){ *rows=3; return c_3_2;}
    if(a==4 && b==1){ *rows=1; return c_4_1;}
    *rows=0;
    return 0;
}

int cheack(int arr1[4][4], int arr2[4][4]) {
    int col=0, row, counter, max;
    while(col<4){
        max = arr2[0][col];
        counter=1;
        row=1;
        while(row<4){
            if(arr2[row][col] > max){
                counter++;
                max = arr2[row][col];
            }
            row++;
        }
        if(arr1[0][col] != counter) return 0;
        col++;
    }

    col=0;
    while(col<4){
        max = arr2[3][col];
        counter=1;
        row=2;
        while(row>=0){
            if(arr2[row][col] > max){
                counter++;
                max = arr2[row][col];
            }
            row--;
        }
        if(arr1[1][col] != counter) return 0;
        col++;
    }

    return 1;
}

void play(const char *d, int arry[4][4]) {
    int bvb[4][4] = {0};
    int clues[16] = {0};
    change_string_to_array(d, bvb, clues);

    int rows1, rows2, rows3, rows4;
    int (*first)[4]  = determan_the_arry(clues[8],  clues[12], &rows1);
    int (*second)[4] = determan_the_arry(clues[9],  clues[13], &rows2);
    int (*third)[4]  = determan_the_arry(clues[10], clues[14], &rows3);
    int (*fourth)[4] = determan_the_arry(clues[11], clues[15], &rows4);

    if(!first || !second || !third || !fourth) return;

    int x=0,y,z,r,i;
    while(x<rows1){
        i=0;
        while(i<4){ arry[0][i] = first[x][i]; i++; }

        y=0;
        while(y<rows2){
            i=0;
            while(i<4){ arry[1][i] = second[y][i]; i++; }

            z=0;
            while(z<rows3){
                i=0;
                while(i<4){ arry[2][i] = third[z][i]; i++; }

                r=0;
                while(r<rows4){
                    i=0;
                    while(i<4){ arry[3][i] = fourth[r][i]; i++; }

                    if(cheack(bvb, arry)) return;
                    r++;
                }
                z++;
            }
            y++;
        }
        x++;
    }
}

#include <unistd.h>
int main(){
    char input[] = "2 2 1 3 2 2 3 1 3 1 2 2 2 3 4 1";
    play(input, ans);

    int i = 0;
    int j;
    while(i<4){
        j=0;
        while(j<4){
            char v = '0' + ans[i][j];
            write(1,&v,1);
            write(1," ",1);
            j++;
        }
            write(1,"\n",1);
        i++;
    }
    return 0;
}
